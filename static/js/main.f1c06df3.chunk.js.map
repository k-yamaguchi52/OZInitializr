{"version":3,"sources":["components/crawlIni/previewDialog/index.tsx","components/Navigation/index.tsx","components/crawlIni/common/index.tsx","components/crawlIni/pagenation/index.tsx","components/crawlIni/detailPage/index.tsx","components/crawlIni/page/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CrawlIniPreviewDialog","open","onClose","setting","Dialog","aria-labelledby","aria-describedby","fullWidth","DialogContent","TextField","id","multiline","rows","variant","defaultValue","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","createStyles","root","flexGrow","title","NavigationBar","useState","crawlIniSetting","crawlIniDialogOpen","setCrawlIniDialogOpen","classes","className","AppBar","position","Toolbar","Typography","padding","spacing","CrawlIniCommon","crawlType","useIgnoreList","interval","threadCount","accessRetryCount","targetCharSet","fileKeyFlg","fileKeyStStr","fileKeyEndStr","fileKeySlashCnt","handleCrawlTypeChange","handleUseIgnoreListChange","handleIntervalChange","handleThreadCountChange","handleAccessRetryCountChange","handleTargetCharSetChange","handleFileKeyFlgChange","handleFileKeyStStrChange","handleFileKeyEndStrChange","handleFileKeySlashCntChange","Grid","container","direction","item","alignItems","FormLabel","component","RadioGroup","name","aria-label","value","onChange","row","map","FormControlLabel","toString","control","Radio","checked","label","type","CrawlIniPagination","nextPageCheckType","nextPageParam","nextPageScPreStr","nextPageScPostStr","nextPageComplementStr","searchCountCheckType","searchCountCheckClass","searchCountPreStr","searchCountPostStr","searchCountByPage","handleNextPageCheckTypeChange","handleNextPageParamChange","handleNextPageScPreStrChange","handleNextPageScPostStrChange","handleNextPageComplementStrChange","handleSearchCountCheckTypeChange","handleSearchCountCheckClassChange","handleSearchCountPreStrChange","handleSearchCountPostStrChange","handleSearchCountByPageChange","CrawlIniDetailPage","listScrape","listAreaQuery","listUrlQuery","listTargetAtrr","targetLinkParentClass","targetPageIncStr1","targetPageIncStr2","targetPageIncStr3","targetPageDecStr1","targetPageDecStr2","targetPageDecStr3","handleListScrapeChange","handleListAreaQueryChange","handleListUrlQueryChange","handleListTargetAtrrChange","handleTargetLinkParentClassChange","handleTargetPageIncStr1Change","handleTargetPageIncStr2Change","handleTargetPageIncStr3Change","handleTargetPageDecStr1Change","handleTargetPageDecStr2Change","handleTargetPageDecStr3Change","marginBottom","bottomBar","top","bottom","generateButton","margin","CrawlIniPage","setCrawlType","setUseIgnoreList","setInterval","setThreadCount","setAccessRetryCount","setTargetCharSet","setFileKeyFlg","setFileKeyStStr","setFileKeyEndStr","setFileKeySlashCnt","setNextPageCheckType","setNextPageParam","setNextPageScPreStr","setNextPageScPostStr","setNextPageComplementStr","setSearchCountCheckType","setSearchCountCheckClass","setSearchCountPreStr","setSearchCountPostStr","setSearchCountByPage","setListScrape","setListAreaQuery","setListUrlQuery","setListTargetAtrr","setTargetLinkParentClass","setTargetPageIncStr1","setTargetPageIncStr2","setTargetPageIncStr3","setTargetPageDecStr1","setTargetPageDecStr2","setTargetPageDecStr3","setCrawlIniSetting","justify","xs","event","Number","target","Divider","orientation","flexItem","settings","App","Navigation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1c06df3.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  setting: string;\n};\n\nconst CrawlIniPreviewDialog: FC<Props> = ({ open, onClose, setting }) => {\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth\n    >\n      <DialogContent>\n        <TextField\n          id=\"standard-multiline-static\"\n          multiline\n          rows={25}\n          variant=\"filled\"\n          fullWidth\n          defaultValue={setting}\n        />\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n              CLOSE\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CrawlIniPreviewDialog;\n","import { AppBar, Button, createStyles, makeStyles, Theme, Toolbar, Typography } from \"@material-ui/core\";\nimport React, {FC, useState} from \"react\";\nimport CrawlIniPreviewDialog from \"../crawlIni/previewDialog\";\n\nconst useStyles = makeStyles((theme: Theme) => \ncreateStyles({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1\n    }\n}),\n);\n\nconst NavigationBar: FC = () => {\n\nconst [crawlType, setCrawlType] = useState(2);\n  const [useIgnoreList, setUseIgnoreList] = useState(1);\n  const [interval, setInterval] = useState(500);\n  const [threadCount, setThreadCount] = useState(10);\n  const [accessRetryCount, setAccessRetryCount] = useState(5);\n  const [targetCharSet, setTargetCharSet] = useState(\"UTF-8\");\n\n  const [fileKeyFlg, setFileKeyFlg] = useState(1);\n  const [fileKeyStStr, setFileKeyStStr] = useState(\"\");\n  const [fileKeyEndStr, setFileKeyEndStr] = useState(\"\");\n  const [fileKeySlashCnt, setFileKeySlashCnt] = useState(0);\n\n  const [nextPageCheckType, setNextPageCheckType] = useState(0);\n  //checkType=0\n  const [nextPageParam, setNextPageParam] = useState(\"\");\n  //checkType=7\n  const [nextPageScPreStr, setNextPageScPreStr] = useState(\"\");\n  const [nextPageScPostStr, setNextPageScPostStr] = useState(\"\");\n  const [nextPageComplementStr, setNextPageComplementStr] = useState(\"\");\n  const [searchCountCheckType, setSearchCountCheckType] = useState(1);\n  const [searchCountCheckClass, setSearchCountCheckClass] = useState(\"\");\n  const [searchCountPreStr, setSearchCountPreStr] = useState(\"\");\n  const [searchCountPostStr, setSearchCountPostStr] = useState(\"\");\n  const [searchCountByPage, setSearchCountByPage] = useState(20);\n\n  const [listScrape, setListScrape] = useState(0);\n  const [listAreaQuery, setListAreaQuery] = useState(\"\");\n  const [listUrlQuery, setListUrlQuery] = useState(\"\");\n  const [listTargetAtrr, setListTargetAtrr] = useState(\"\");\n\n  const [targetLinkParentClass, setTargetLinkParentClass] = useState(\"\");\n\n  const [targetPageIncStr1, setTargetPageIncStr1] = useState(\"\");\n  const [targetPageIncStr2, setTargetPageIncStr2] = useState(\"\");\n  const [targetPageIncStr3, setTargetPageIncStr3] = useState(\"\");\n  const [targetPageDecStr1, setTargetPageDecStr1] = useState(\"\");\n  const [targetPageDecStr2, setTargetPageDecStr2] = useState(\"\");\n  const [targetPageDecStr3, setTargetPageDecStr3] = useState(\"\");\n\n  const [crawlIniSetting, setCrawlIniSetting] = useState(\"\");\n\n    const [crawlIniDialogOpen, setCrawlIniDialogOpen] = useState(false);\n    const classes = useStyles();\n\n    const handleOpenCrawlIniDialog = () => {\n        const settings = \"crawlType=\" + crawlType\n        + \"\\nuseIgnoreList=\" + useIgnoreList;\n        setCrawlIniSetting(settings);\n        setCrawlIniDialogOpen(true);\n    };\n    const handleCloseCrawlIniDialog = () => {\n        setCrawlIniDialogOpen(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        OZ Initializr\n                    </Typography>\n                    {/* <Button color=\"inherit\">CRAWL</Button>\n                    <Button color=\"inherit\">SCRAPE</Button> */}\n                    {/* <Button color=\"inherit\" onClick={handleOpenCrawlIniDialog}>GENERATE</Button> */}\n                </Toolbar>\n            </AppBar>\n            <CrawlIniPreviewDialog open={crawlIniDialogOpen} onClose={handleCloseCrawlIniDialog} setting={crawlIniSetting}>\n            </CrawlIniPreviewDialog>\n        </div>\n    );\n}\n\nexport default NavigationBar;","import {\n  createStyles,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { FC } from \"react\";\n\ntype Props = {\n  crawlType: number;\n  useIgnoreList: number;\n  interval: number;\n  threadCount: number;\n  accessRetryCount: number;\n  targetCharSet: string;\n  fileKeyFlg: number;\n  fileKeyStStr: string;\n  fileKeyEndStr: string;\n  fileKeySlashCnt: number;\n  handleCrawlTypeChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleUseIgnoreListChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleIntervalChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleThreadCountChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleAccessRetryCountChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetCharSetChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleFileKeyFlgChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleFileKeyStStrChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleFileKeyEndStrChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleFileKeySlashCntChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst CrawlIniCommon: FC<Props> = ({\n  crawlType,\n  useIgnoreList,\n  interval,\n  threadCount,\n  accessRetryCount,\n  targetCharSet,\n  fileKeyFlg,\n  fileKeyStStr,\n  fileKeyEndStr,\n  fileKeySlashCnt,\n  handleCrawlTypeChange,\n  handleUseIgnoreListChange,\n  handleIntervalChange,\n  handleThreadCountChange,\n  handleAccessRetryCountChange,\n  handleTargetCharSetChange,\n  handleFileKeyFlgChange,\n  handleFileKeyStStrChange,\n  handleFileKeyEndStrChange,\n  handleFileKeySlashCntChange,\n}) => {\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" className={classes.root} spacing={3}>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">crawlType</FormLabel>\n          <RadioGroup\n            name=\"crawlType\"\n            aria-label=\"crawlType\"\n            value={crawlType}\n            onChange={handleCrawlTypeChange}\n            row\n          >\n            {[2, 3, 4, 5].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={crawlType === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">useIgnoreList</FormLabel>\n          <RadioGroup\n            name=\"useIgnoreList\"\n            aria-label=\"useIgnoreList\"\n            value={useIgnoreList}\n            onChange={handleUseIgnoreListChange}\n            row\n          >\n            {[0, 1].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={useIgnoreList === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">interval</FormLabel>\n          <TextField\n            type=\"number\"\n            value={interval}\n            onChange={handleIntervalChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">threadCount</FormLabel>\n          <TextField\n            type=\"number\"\n            value={threadCount}\n            onChange={handleThreadCountChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">accessRetryCount</FormLabel>\n          <TextField\n            type=\"number\"\n            value={accessRetryCount}\n            onChange={handleAccessRetryCountChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetCharSet</FormLabel>\n          <RadioGroup\n            name=\"targetCharSet\"\n            aria-label=\"targetCharSet\"\n            value={targetCharSet}\n            onChange={handleTargetCharSetChange}\n            row\n          >\n            {[\"UTF-8\", \"Shift-JIS\"].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value}\n                control={<Radio checked={targetCharSet === value} />}\n                label={value}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">fileKeyFlg</FormLabel>\n          <RadioGroup\n            name=\"fileKeyFlg\"\n            aria-label=\"fileKeyFlg\"\n            value={fileKeyFlg}\n            onChange={handleFileKeyFlgChange}\n            row\n          >\n            {[1, 2].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={fileKeyFlg === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      {fileKeyFlg === 1 && (\n        <>\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n              <FormLabel component=\"legend\">fileKeyStStr</FormLabel>\n              <TextField\n                value={fileKeyStStr}\n                onChange={handleFileKeyStStrChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n              <FormLabel component=\"legend\">fileKeyEndStr</FormLabel>\n              <TextField\n                value={fileKeyEndStr}\n                onChange={handleFileKeyEndStrChange}\n              />\n            </Grid>\n          </Grid>\n        </>\n      )}\n\n      {fileKeyFlg === 2 && (\n        <Grid item>\n          <Grid container direction=\"column\" alignItems=\"flex-start\">\n            <FormLabel component=\"legend\">fileKeySlashCnt</FormLabel>\n            <TextField\n              type=\"number\"\n              value={fileKeySlashCnt}\n              onChange={handleFileKeySlashCntChange}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default CrawlIniCommon;\n","import { createStyles, FormControlLabel, FormLabel, Grid, makeStyles, Radio, RadioGroup, TextField, Theme } from \"@material-ui/core\";\nimport React, { FC } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\ntype Props = {\nnextPageCheckType: number;\nnextPageParam: string;\nnextPageScPreStr: string;\nnextPageScPostStr: string;\nnextPageComplementStr: string;\nsearchCountCheckType: number;\nsearchCountCheckClass: string;\nsearchCountPreStr: string;\nsearchCountPostStr: string;\nsearchCountByPage: number;\nhandleNextPageCheckTypeChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleNextPageParamChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleNextPageScPreStrChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleNextPageScPostStrChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleNextPageComplementStrChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleSearchCountCheckTypeChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleSearchCountCheckClassChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleSearchCountPreStrChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleSearchCountPostStrChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\nhandleSearchCountByPageChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst CrawlIniPagination: FC<Props> = ({\n    nextPageCheckType,\n    nextPageParam,\n    nextPageScPreStr,\n    nextPageScPostStr,\n    nextPageComplementStr,\n    searchCountCheckType,\n    searchCountCheckClass,\n    searchCountPreStr,\n    searchCountPostStr,\n    searchCountByPage,\n    handleNextPageCheckTypeChange,\n    handleNextPageParamChange,\n    handleNextPageScPreStrChange,\n    handleNextPageScPostStrChange,\n    handleNextPageComplementStrChange,\n    handleSearchCountCheckTypeChange,\n    handleSearchCountCheckClassChange,\n    handleSearchCountPreStrChange,\n    handleSearchCountPostStrChange,\n    handleSearchCountByPageChange,\n}) => {\n    \n    const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" className={classes.root} spacing={3}>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">nextPageCheckType</FormLabel>\n          <RadioGroup\n            name=\"nextPageCheckType\"\n            aria-label=\"nextPageCheckType\"\n            value={nextPageCheckType}\n            onChange={handleNextPageCheckTypeChange}\n            row\n          >\n            {[0, 7, 10].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={nextPageCheckType === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      {(nextPageCheckType === 0 || nextPageCheckType === 10) && \n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">nextPageParam</FormLabel>\n          <TextField\n            value={nextPageParam}\n            onChange={handleNextPageParamChange}\n          />\n        </Grid>\n      </Grid>\n      }\n\n      {nextPageCheckType === 7 && \n      <>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">nextPageScPreStr</FormLabel>\n          <TextField\n            value={nextPageScPreStr}\n            onChange={handleNextPageScPreStrChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">nextPageScPostStr</FormLabel>\n          <TextField\n            value={nextPageScPostStr}\n            onChange={handleNextPageScPostStrChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">nextPageComplementStr</FormLabel>\n          <TextField\n            value={nextPageComplementStr}\n            onChange={handleNextPageComplementStrChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">searchCountCheckType</FormLabel>\n          <RadioGroup\n            name=\"searchCountCheckType\"\n            aria-label=\"searchCountCheckType\"\n            value={searchCountCheckType}\n            onChange={handleSearchCountCheckTypeChange}\n            row\n          >\n            {[0, 1].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={searchCountCheckType === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">searchCountCheckClass</FormLabel>\n          <TextField\n            value={searchCountCheckClass}\n            onChange={handleSearchCountCheckClassChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">searchCountPreStr</FormLabel>\n          <TextField\n            value={searchCountPreStr}\n            onChange={handleSearchCountPreStrChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">searchCountPostStr</FormLabel>\n          <TextField\n            value={searchCountPostStr}\n            onChange={handleSearchCountPostStrChange}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">searchCountByPage</FormLabel>\n          <TextField\n          type=\"number\"\n            value={searchCountByPage}\n            onChange={handleSearchCountByPageChange}\n          />\n        </Grid>\n      </Grid>\n      </>\n      }\n      \n    </Grid>\n  );\n};\n\nexport default CrawlIniPagination;\n","import {\n  createStyles,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { FC } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\ntype Props = {\n  listScrape: number;\n  listAreaQuery: string;\n  listUrlQuery: string;\n  listTargetAtrr: string;\n  targetLinkParentClass: string;\n  targetPageIncStr1: string;\n  targetPageIncStr2: string;\n  targetPageIncStr3: string;\n  targetPageDecStr1: string;\n  targetPageDecStr2: string;\n  targetPageDecStr3: string;\n  handleListScrapeChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleListAreaQueryChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleListUrlQueryChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleListTargetAtrrChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetLinkParentClassChange: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageIncStr1Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageIncStr2Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageIncStr3Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageDecStr1Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageDecStr2Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  handleTargetPageDecStr3Change: (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n};\n\nconst CrawlIniDetailPage: FC<Props> = ({\n  listScrape,\n  listAreaQuery,\n  listUrlQuery,\n  listTargetAtrr,\n  targetLinkParentClass,\n  targetPageIncStr1,\n  targetPageIncStr2,\n  targetPageIncStr3,\n  targetPageDecStr1,\n  targetPageDecStr2,\n  targetPageDecStr3,\n  handleListScrapeChange,\n  handleListAreaQueryChange,\n  handleListUrlQueryChange,\n  handleListTargetAtrrChange,\n  handleTargetLinkParentClassChange,\n  handleTargetPageIncStr1Change,\n  handleTargetPageIncStr2Change,\n  handleTargetPageIncStr3Change,\n  handleTargetPageDecStr1Change,\n  handleTargetPageDecStr2Change,\n  handleTargetPageDecStr3Change,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" className={classes.root} spacing={3}>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">listScrape</FormLabel>\n          <RadioGroup\n            name=\"listScrape\"\n            aria-label=\"listScrape\"\n            value={listScrape}\n            onChange={handleListScrapeChange}\n            row\n          >\n            {[0, 1].map((value) => (\n              <FormControlLabel\n                key={value}\n                value={value.toString()}\n                control={<Radio checked={listScrape === value} />}\n                label={value.toString()}\n              />\n            ))}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n\n      {listScrape === 1 ? (\n        <>\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n              <FormLabel component=\"legend\">listAreaQuery</FormLabel>\n              <TextField\n                value={listAreaQuery}\n                onChange={handleListAreaQueryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n              <FormLabel component=\"legend\">listUrlQuery</FormLabel>\n              <TextField\n                value={listUrlQuery}\n                onChange={handleListUrlQueryChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n              <FormLabel component=\"legend\">listTargetAtrr</FormLabel>\n              <TextField\n                value={listTargetAtrr}\n                onChange={handleListTargetAtrrChange}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : (\n        <Grid item>\n          <Grid container direction=\"column\" alignItems=\"flex-start\">\n            <FormLabel component=\"legend\">targetLinkParentClass</FormLabel>\n            <TextField\n              value={targetLinkParentClass}\n              onChange={handleTargetLinkParentClassChange}\n            />\n          </Grid>\n        </Grid>\n      )}\n\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageIncStr1</FormLabel>\n          <TextField\n            value={targetPageIncStr1}\n            onChange={handleTargetPageIncStr1Change}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageIncStr2</FormLabel>\n          <TextField\n            value={targetPageIncStr2}\n            onChange={handleTargetPageIncStr2Change}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageIncStr3</FormLabel>\n          <TextField\n            value={targetPageIncStr3}\n            onChange={handleTargetPageIncStr3Change}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageDecStr1</FormLabel>\n          <TextField\n            value={targetPageDecStr1}\n            onChange={handleTargetPageDecStr1Change}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageDecStr2</FormLabel>\n          <TextField\n            value={targetPageDecStr2}\n            onChange={handleTargetPageDecStr2Change}\n          />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <FormLabel component=\"legend\">targetPageDecStr3</FormLabel>\n          <TextField\n            value={targetPageDecStr3}\n            onChange={handleTargetPageDecStr3Change}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CrawlIniDetailPage;\n","import React, { FC, useState } from \"react\";\nimport CrawlIniCommon from \"../common\";\nimport CrawlIniPagenation from \"../pagenation\";\nimport CrawlIniDetailPage from \"../detailPage\";\nimport {\n  AppBar,\n  Button,\n  createStyles,\n  Divider,\n  Grid,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport CrawlIniPreviewDialog from \"../previewDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      marginBottom: \"30px\",\n    },\n    bottomBar: {\n      top: \"auto\",\n      bottom: 0,\n    },\n    generateButton: {\n      margin: \"0 auto\",\n    },\n  })\n);\n\nconst CrawlIniPage: FC = () => {\n  const [crawlType, setCrawlType] = useState(2);\n  const [useIgnoreList, setUseIgnoreList] = useState(1);\n  const [interval, setInterval] = useState(500);\n  const [threadCount, setThreadCount] = useState(10);\n  const [accessRetryCount, setAccessRetryCount] = useState(5);\n  const [targetCharSet, setTargetCharSet] = useState(\"UTF-8\");\n\n  const [fileKeyFlg, setFileKeyFlg] = useState(1);\n  const [fileKeyStStr, setFileKeyStStr] = useState(\"\");\n  const [fileKeyEndStr, setFileKeyEndStr] = useState(\"\");\n  const [fileKeySlashCnt, setFileKeySlashCnt] = useState(0);\n\n  const [nextPageCheckType, setNextPageCheckType] = useState(0);\n  //checkType=0\n  const [nextPageParam, setNextPageParam] = useState(\"\");\n  //checkType=7\n  const [nextPageScPreStr, setNextPageScPreStr] = useState(\"\");\n  const [nextPageScPostStr, setNextPageScPostStr] = useState(\"\");\n  const [nextPageComplementStr, setNextPageComplementStr] = useState(\"\");\n  const [searchCountCheckType, setSearchCountCheckType] = useState(1);\n  const [searchCountCheckClass, setSearchCountCheckClass] = useState(\"\");\n  const [searchCountPreStr, setSearchCountPreStr] = useState(\"\");\n  const [searchCountPostStr, setSearchCountPostStr] = useState(\"\");\n  const [searchCountByPage, setSearchCountByPage] = useState(20);\n\n  const [listScrape, setListScrape] = useState(0);\n  const [listAreaQuery, setListAreaQuery] = useState(\"\");\n  const [listUrlQuery, setListUrlQuery] = useState(\"\");\n  const [listTargetAtrr, setListTargetAtrr] = useState(\"\");\n\n  const [targetLinkParentClass, setTargetLinkParentClass] = useState(\"\");\n\n  const [targetPageIncStr1, setTargetPageIncStr1] = useState(\"\");\n  const [targetPageIncStr2, setTargetPageIncStr2] = useState(\"\");\n  const [targetPageIncStr3, setTargetPageIncStr3] = useState(\"\");\n  const [targetPageDecStr1, setTargetPageDecStr1] = useState(\"\");\n  const [targetPageDecStr2, setTargetPageDecStr2] = useState(\"\");\n  const [targetPageDecStr3, setTargetPageDecStr3] = useState(\"\");\n\n  const [crawlIniSetting, setCrawlIniSetting] = useState(\"\");\n\n  const [crawlIniDialogOpen, setCrawlIniDialogOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const handleCrawlTypeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setCrawlType(Number((event.target as HTMLInputElement).value));\n  };\n  const handleUseIgnoreListChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setUseIgnoreList(Number((event.target as HTMLInputElement).value));\n  };\n  const handleIntervalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInterval(Number(event.target.value));\n  };\n  const handleThreadCountChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setThreadCount(Number(event.target.value));\n  };\n  const handleAccessRetryCountChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setAccessRetryCount(Number(event.target.value));\n  };\n  const handleTargetCharSetChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetCharSet((event.target as HTMLInputElement).value);\n  };\n  const handleFileKeyFlgChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setFileKeyFlg(Number((event.target as HTMLInputElement).value));\n  };\n  const handleFileKeyStStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setFileKeyStStr(event.target.value);\n  };\n\n  const handleFileKeyEndStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setFileKeyEndStr(event.target.value);\n  };\n  const handleFileKeySlashCntChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setFileKeySlashCnt(Number((event.target as HTMLInputElement).value));\n  };\n\n  const handleNextPageCheckTypeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setNextPageCheckType(Number((event.target as HTMLInputElement).value));\n  };\n  const handleNextPageParamChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setNextPageParam(event.target.value);\n  };\n\n  const handleNextPageScPreStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setNextPageScPreStr(event.target.value);\n  };\n  const handleNextPageScPostStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setNextPageScPostStr(event.target.value);\n  };\n  const handleNextPageComplementStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setNextPageComplementStr(event.target.value);\n  };\n  const handleSearchCountCheckTypeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSearchCountCheckType(Number((event.target as HTMLInputElement).value));\n  };\n  const handleSearchCountCheckClassChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSearchCountCheckClass(event.target.value);\n  };\n  const handleSearchCountPreStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSearchCountPreStr(event.target.value);\n  };\n  const handleSearchCountPostStrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSearchCountPostStr(event.target.value);\n  };\n  const handleSearchCountByPageChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSearchCountByPage(Number((event.target as HTMLInputElement).value));\n  };\n\n  const handleListScrapeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setListScrape(Number((event.target as HTMLInputElement).value));\n  };\n  const handleListAreaQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setListAreaQuery(event.target.value);\n  };\n  const handleListUrlQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setListUrlQuery(event.target.value);\n  };\n  const handleListTargetAtrrChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setListTargetAtrr(event.target.value);\n  };\n  const handleTargetLinkParentClassChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetLinkParentClass(event.target.value);\n  };\n  const handleTargetPageIncStr1Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageIncStr1(event.target.value);\n  };\n  const handleTargetPageIncStr2Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageIncStr2(event.target.value);\n  };\n  const handleTargetPageIncStr3Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageIncStr3(event.target.value);\n  };\n  const handleTargetPageDecStr1Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageDecStr1(event.target.value);\n  };\n  const handleTargetPageDecStr2Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageDecStr2(event.target.value);\n  };\n  const handleTargetPageDecStr3Change = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setTargetPageDecStr3(event.target.value);\n  };\n\n  const handleOpenCrawlIniDialog = () => {\n    let settings =\n      \"crawlType=\" +\n      crawlType +\n      \"\\nuseIgnoreList=\" +\n      useIgnoreList +\n      \"\\ninterval=\" +\n      interval +\n      \"\\nthreadCount=\" +\n      threadCount +\n      \"\\naccessRetryCount=\" +\n      accessRetryCount +\n      \"\\ntargetCharSet=\" +\n      targetCharSet +\n      \"\\nfileKeyFlg=\" +\n      fileKeyFlg;\n    if (fileKeyFlg === 1) {\n      settings +=\n        \"\\nfileKeyStStr=\" + fileKeyStStr + \"\\nfileKeyEndStr=\" + fileKeyEndStr;\n    } else if (fileKeyFlg === 2) {\n      settings += \"\\nfileKeySlashCnt=\" + fileKeySlashCnt;\n    }\n\n    settings += \"\\nnextPageCheckType=\" + nextPageCheckType;\n    if (nextPageCheckType === 0 || nextPageCheckType === 10) {\n      settings += \"\\nnextPageParam=\" + nextPageParam;\n    } else if (nextPageCheckType === 7) {\n      settings +=\n        \"\\nnextPageScPreStr=\" +\n        nextPageScPreStr +\n        \"\\nnextPageScPostStr=\" +\n        nextPageScPostStr +\n        \"\\nnextPageComplementStr=\" +\n        nextPageComplementStr +\n        \"\\nsearchCountCheckType=\" +\n        searchCountCheckType +\n        \"\\nsearchCountCheckClass=\" +\n        searchCountCheckClass +\n        \"\\nsearchCountPreStr=\" +\n        searchCountPreStr +\n        \"\\nsearchCountPostStr=\" +\n        searchCountPostStr +\n        \"\\nsearchCountByPage=\" +\n        searchCountByPage;\n    }\n\n    if (listScrape === 1) {\n      settings +=\n        \"\\nlistScrape=\" +\n        listScrape +\n        \"\\nlistAreaQuery=\" +\n        listAreaQuery +\n        \"\\nlistUrlQuery=\" +\n        listUrlQuery +\n        \"\\nlistTargetAtrr=\" +\n        listTargetAtrr;\n    } else {\n      settings +=\n        \"\\ntargetLinkParentClass=\" +\n        targetLinkParentClass;\n    }\n    settings += \"\\ntargetPageIncStr1=\" +\n    targetPageIncStr1 +\n    \"\\ntargetPageIncStr2=\" +\n    targetPageIncStr2 +\n    \"\\ntargetPageIncStr3=\" +\n    targetPageIncStr3 +\n    \"\\ntargetPageDecStr1=\" +\n    targetPageDecStr1 +\n    \"\\ntargetPageDecStr2=\" +\n    targetPageDecStr2 +\n    \"\\ntargetPageDecStr3=\" +\n    targetPageDecStr3;\n\n    setCrawlIniSetting(settings);\n    setCrawlIniDialogOpen(true);\n  };\n  const handleCloseCrawlIniDialog = () => {\n    setCrawlIniDialogOpen(false);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.root}\n        direction=\"row\"\n        justify=\"space-evenly\"\n      >\n        <Grid item xs>\n          <CrawlIniCommon\n            crawlType={crawlType}\n            useIgnoreList={useIgnoreList}\n            interval={interval}\n            threadCount={threadCount}\n            accessRetryCount={accessRetryCount}\n            targetCharSet={targetCharSet}\n            fileKeyFlg={fileKeyFlg}\n            fileKeyStStr={fileKeyStStr}\n            fileKeyEndStr={fileKeyEndStr}\n            fileKeySlashCnt={fileKeySlashCnt}\n            handleCrawlTypeChange={handleCrawlTypeChange}\n            handleUseIgnoreListChange={handleUseIgnoreListChange}\n            handleIntervalChange={handleIntervalChange}\n            handleThreadCountChange={handleThreadCountChange}\n            handleAccessRetryCountChange={handleAccessRetryCountChange}\n            handleTargetCharSetChange={handleTargetCharSetChange}\n            handleFileKeyFlgChange={handleFileKeyFlgChange}\n            handleFileKeyStStrChange={handleFileKeyStStrChange}\n            handleFileKeyEndStrChange={handleFileKeyEndStrChange}\n            handleFileKeySlashCntChange={handleFileKeySlashCntChange}\n          ></CrawlIniCommon>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem></Divider>\n        <Grid item xs>\n          <CrawlIniPagenation\n            nextPageCheckType={nextPageCheckType}\n            nextPageParam={nextPageParam}\n            nextPageScPreStr={nextPageScPreStr}\n            nextPageScPostStr={nextPageScPostStr}\n            nextPageComplementStr={nextPageComplementStr}\n            searchCountCheckType={searchCountCheckType}\n            searchCountCheckClass={searchCountCheckClass}\n            searchCountPreStr={searchCountPreStr}\n            searchCountPostStr={searchCountPostStr}\n            searchCountByPage={searchCountByPage}\n            handleNextPageCheckTypeChange={handleNextPageCheckTypeChange}\n            handleNextPageParamChange={handleNextPageParamChange}\n            handleNextPageScPreStrChange={handleNextPageScPreStrChange}\n            handleNextPageScPostStrChange={handleNextPageScPostStrChange}\n            handleNextPageComplementStrChange={handleNextPageComplementStrChange}\n            handleSearchCountCheckTypeChange={handleSearchCountCheckTypeChange}\n            handleSearchCountCheckClassChange={handleSearchCountCheckClassChange}\n            handleSearchCountPreStrChange={handleSearchCountPreStrChange}\n            handleSearchCountPostStrChange={handleSearchCountPostStrChange}\n            handleSearchCountByPageChange={handleSearchCountByPageChange}\n          ></CrawlIniPagenation>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem></Divider>\n        <Grid item xs>\n          <CrawlIniDetailPage\n            listScrape={listScrape}\n            listAreaQuery={listAreaQuery}\n            listUrlQuery={listUrlQuery}\n            listTargetAtrr={listTargetAtrr}\n            targetLinkParentClass={targetLinkParentClass}\n            targetPageIncStr1={targetPageIncStr1}\n            targetPageIncStr2={targetPageIncStr2}\n            targetPageIncStr3={targetPageIncStr3}\n            targetPageDecStr1={targetPageDecStr1}\n            targetPageDecStr2={targetPageDecStr2}\n            targetPageDecStr3={targetPageDecStr3}\n            handleListScrapeChange={handleListScrapeChange}\n            handleListAreaQueryChange={handleListAreaQueryChange}\n            handleListUrlQueryChange={handleListUrlQueryChange}\n            handleListTargetAtrrChange={handleListTargetAtrrChange}\n            handleTargetLinkParentClassChange={handleTargetLinkParentClassChange}\n            handleTargetPageIncStr1Change={handleTargetPageIncStr1Change}\n            handleTargetPageIncStr2Change={handleTargetPageIncStr2Change}\n            handleTargetPageIncStr3Change={handleTargetPageIncStr3Change}\n            handleTargetPageDecStr1Change={handleTargetPageDecStr1Change}\n            handleTargetPageDecStr2Change={handleTargetPageDecStr2Change}\n            handleTargetPageDecStr3Change={handleTargetPageDecStr3Change}\n          ></CrawlIniDetailPage>\n        </Grid>\n      </Grid>\n      <AppBar position=\"fixed\" color=\"inherit\" className={classes.bottomBar}>\n        <Toolbar>\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            className={classes.generateButton}\n            onClick={handleOpenCrawlIniDialog}\n          >\n            GENERATE\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <CrawlIniPreviewDialog\n        open={crawlIniDialogOpen}\n        onClose={handleCloseCrawlIniDialog}\n        setting={crawlIniSetting}\n      ></CrawlIniPreviewDialog>\n    </>\n  );\n};\n\nexport default CrawlIniPage;\n","import React, { FC } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CrawlIniCommon from \"./components/crawlIni/common\";\nimport CrawlIniPagenation from \"./components/crawlIni/pagenation\";\nimport NavigationBar from \"./components/Navigation\";\nimport CrawlIniDetailPage from \"./components/crawlIni/detailPage\";\nimport { createStyles, Divider, Grid, makeStyles, Theme } from \"@material-ui/core\";\nimport CrawlIniPage from \"./components/crawlIni/page\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst App: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <NavigationBar></NavigationBar>\n      <CrawlIniPage></CrawlIniPage>\n      {/* <Grid container className={classes.root} direction=\"row\" justify=\"space-evenly\">\n        <Grid item xs>\n          <CrawlIniCommon></CrawlIniCommon>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem></Divider>\n        <Grid item xs>\n          <CrawlIniPagenation></CrawlIniPagenation>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem></Divider>\n        <Grid item xs>\n          <CrawlIniDetailPage></CrawlIniDetailPage>\n        </Grid>\n      </Grid> */}\n      {/* <CrawlIniCommon></CrawlIniCommon>\n      <CrawlIniPagenation></CrawlIniPagenation>\n      <CrawlIniDetailPage></CrawlIniDetailPage> */}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}